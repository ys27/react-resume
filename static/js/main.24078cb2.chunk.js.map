{"version":3,"sources":["images/uw-logo.png","components/Name/Name.js","components/SubInfo/SubInfo.js","components/SectionTitle/SectionTitle.js","components/Skills/Skills.js","components/ProfessionalExperience/Data.js","components/ProfessionalExperience/ProfessionalExperience.js","components/EarlierExperience/Data.js","components/EarlierExperience/EarlierExperience.js","components/RecentProjects/Data.js","components/RecentProjects/RecentProjects.js","components/Education/Education.js","components/Keywords/Keywords.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Name","className","SubInfo","SectionTitle","title","toUpperCase","Skills","items","SkillSection","map","item","index","key","Data","company","durations","role","descriptions","mainLine","subLines","ProfessionalExperience","experience","ExperienceSection","ExperienceTitle","duration","ExperienceDesc","desc","Fragment","line","EarlierExperience","EarlierExperienceCard","RecentProjects","project","Project","Education","award","school","Program","src","UWLogo","alt","class","Keywords","App","Resume","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24078cb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uw-logo.69c53a32.png\";","import React from \"react\";\n\nimport \"./Name.scss\";\n\nconst Name = () => <div className=\"name\">Andrew An</div>;\n\nexport default Name;\n","import React from \"react\";\n\nimport {\n  AiFillMail,\n  AiFillPhone,\n  AiFillGithub,\n  AiFillHome,\n} from \"react-icons/ai\";\n\nimport \"./SubInfo.scss\";\n\nconst SubInfo = () => (\n  <div className=\"subinfo\">\n    <div className=\"subinfo-text\">Full-Stack Developer</div>\n    <div className=\"icon-subinfo\">\n      <AiFillMail />\n      <div className=\"subinfo-text\">anandrew1995@gmail.com</div>\n    </div>\n    <div className=\"icon-subinfo\">\n      <AiFillPhone />\n      <div className=\"subinfo-text\">647-978-3085</div>\n    </div>\n    <div className=\"icon-subinfo\">\n      <AiFillGithub />\n      <div className=\"subinfo-text\">ys27</div>\n    </div>\n    <div className=\"icon-subinfo\">\n      <AiFillHome />\n      <div className=\"subinfo-text\">Toronto, ON</div>\n    </div>\n  </div>\n);\n\nexport default SubInfo;\n","import React from \"react\";\n\nimport \"./SectionTitle.scss\";\n\nconst SectionTitle = ({ title }) => (\n  <div className=\"section-title\">\n    <svg>\n      <rect />\n    </svg>\n    <div>{title.toUpperCase()}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\n\nimport \"./Skills.scss\";\n\nconst Skills = () => (\n  <div className=\"skills\">\n    <SectionTitle title=\"Skills\" />\n    <div className=\"sections\">\n      <SkillSection\n        title=\"Languages\"\n        items={[\"C++\", \"C#\", \"Dart\", \"Java\", \"JavaScript [+TS]\", \"Python\"]}\n      />\n      <SkillSection\n        title=\"Frameworks & Libraries\"\n        items={[\"Jest\", \"Node\", \"React\", \"Redux\", \"Sagas\", \"Sass\"]}\n      />\n      <SkillSection\n        title=\"DevOps\"\n        items={[\"Artifactory\", \"Docker\", \"Jenkins\", \"Kubernetes\", \"Openshift\"]}\n      />\n      <SkillSection\n        title=\"Misc.\"\n        items={[\n          \"Bash/Zsh Scripts\",\n          \"Chrome Extensions\",\n          \"Ethereum Blockchain\",\n          \"Flutter\",\n          \"Custom Node Packages\",\n          \"React Native\",\n          \"Unity + VR\",\n        ]}\n      />\n    </div>\n  </div>\n);\n\nexport default Skills;\n\nconst SkillSection = ({ title, items }) => (\n  <div className=\"section\">\n    <div className=\"title\">{title}</div>\n    <ul>\n      {items.map((item, index) => (\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  </div>\n);\n","const Data = [\n  {\n    title: {\n      company: \"IBM\",\n      durations: [\"Oct 2018 - Present\"],\n      role: \"Software Developer\",\n    },\n    descriptions: [\n      {\n        mainLine:\n          \"Open Banking: Studied the OB specs for research and architectural design;\",\n        subLines: [\n          \"[JS, Java, Couch] Design/Built micro-service REST APIs, auth and certificate management;\",\n          \"[React/Redux, Couch] Produced conceptual UI with circumvention for existing limitations;\",\n          \"Bash scripts to ease development, with command aliases, batch execution, and log windows;\",\n        ],\n      },\n      {\n        mainLine:\n          \"Financial Crimes Insights: As Scrum Master, organized and managed sprint events and outcomes;\",\n        subLines: [\n          \"[MERN/Redux, Custom Packages] Entity Enrichment: Prod. REST API & Demo UI;\",\n          \"[React/Redux, MongoDB, Flask, Carbon] Transaction List Screening: Prod. UI & REST API;\",\n        ],\n      },\n    ],\n  },\n  {\n    title: {\n      company: \"Desire2Learn\",\n      durations: [\"Sept 2017 - Dec 2017\"],\n      role: \"Software Developer Co-op\",\n    },\n    descriptions: [\n      {\n        mainLine:\n          \"[Vue, Node, MongoDB, Solidity] Smart contracts deployed to Ethereum, with UI;\",\n      },\n      {\n        mainLine:\n          \"[Unity 3D, C#] VR Application to view Brightspace content, with OAuth 2.0;\",\n      },\n      {\n        mainLine:\n          \"Brightspace Chrome Extension, to ease user access to recent and relevant links;\",\n      },\n    ],\n  },\n  {\n    title: {\n      company: \"Intl. Financial Data Services\",\n      durations: [\"Sept 2016 - Dec 2016\", \"Jan 2016 - Apr 2016\"],\n      role: \"R&D Developer Co-op\",\n    },\n    descriptions: [\n      {\n        mainLine:\n          \"[Python, Solidity, Node/Express] Transactions simulator conn. to Ethereum blockchain & UI;\",\n      },\n      {\n        mainLine:\n          \"[Ruby on Rails] Security Week Games Web App with levels, users, and score management;\",\n      },\n      {\n        mainLine:\n          \"[Meteor, React, MongoDB] First full-stack app from scratch: Dynamic CMS and authentication;\",\n      },\n      {\n        mainLine:\n          \"[Solidity, Node/Express, JS] Ethereum Smart contracts: Real-time info between contracts & UI;\",\n      },\n    ],\n  },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./ProfessionalExperience.scss\";\n\nconst ProfessionalExperience = () => (\n  <div className=\"professional-experience\">\n    <SectionTitle title=\"Professional Experience\" />\n    <div className=\"experiences\">\n      {Data.map((experience) => (\n        <ExperienceSection experience={experience} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default ProfessionalExperience;\n\nconst ExperienceSection = ({ experience }) => (\n  <div className=\"experience-section\">\n    <ExperienceTitle title={experience.title} />\n    <ExperienceDesc descriptions={experience.descriptions} />\n  </div>\n);\n\nconst ExperienceTitle = ({ title }) => {\n  const { company, durations, role } = title;\n  return (\n    <div className=\"experience-title\">\n      <div className=\"company\">{company}</div>\n      <div className=\"durations\">\n        {durations.map((duration, index) => (\n          <div key={index} className=\"duration\">\n            {duration}\n          </div>\n        ))}\n      </div>\n      <div className=\"role\">{role}</div>\n    </div>\n  );\n};\n\nconst ExperienceDesc = ({ descriptions }) => (\n  <ul className=\"experience-desc\">\n    {descriptions.map((desc, index) => (\n      <React.Fragment key={index}>\n        <li>{desc.mainLine}</li>\n        {desc.subLines && (\n          <ul>\n            {desc.subLines.map((line, index) => (\n              <li key={index} className=\"subline\">\n                {line}\n              </li>\n            ))}\n          </ul>\n        )}\n      </React.Fragment>\n    ))}\n  </ul>\n);\n","const Data = [\n  {\n    title: {\n      company: \"Gov't of Ontario\",\n      durations: [\"May 2015 - Aug 2015\"],\n      role: \"Web Developer Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"Manulife Financial\",\n      durations: [\"Sept 2014 - Dec 2014\"],\n      role: \".NET Dev / DB Admin Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"IBM\",\n      durations: [\"Jan 2014 - Apr 2014\"],\n      role: \"QA Developer Co-op\",\n    },\n  },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./EarlierExperience.scss\";\nimport \"../ProfessionalExperience/ProfessionalExperience.scss\";\n\nconst EarlierExperience = () => (\n  <div className=\"earlier-experience\">\n    <SectionTitle title=\"Earlier Experience\" />\n    <div className=\"experiences\">\n      {Data.map((experience) => (\n        <EarlierExperienceCard title={experience.title} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default EarlierExperience;\n\nconst EarlierExperienceCard = ({ title }) => {\n  const { company, durations, role } = title;\n  return (\n    <div className=\"earlier-experience-card\">\n      <div className=\"company\">{company}</div>\n      <div className=\"durations\">\n        {durations.map((duration, index) => (\n          <div key={index} className=\"duration\">\n            {duration}\n          </div>\n        ))}\n      </div>\n      <div className=\"role\">{role}</div>\n    </div>\n  );\n};\n","const Data = [\n  {\n    title: \"Fund Tracker\",\n    desc:\n      \"[Flutter, Dart] Keep track of transactions. Statistics, recurring transactions, cloud sync, etc.;\",\n  },\n  {\n    title: \"MelonList\",\n    desc:\n      \"[MERN] View various music board charts with YouTube links and export to playlist;\",\n  },\n  {\n    title: \"RedditUserTransfer\",\n    desc:\n      \"[MERN] Transfer saved posts & comments, subscriptions, and preferences to other accounts;\",\n  },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./RecentProjects.scss\";\n\nconst RecentProjects = () => (\n  <div className=\"recent-projects\">\n    <SectionTitle title=\"Recent Projects\" />\n    <div className=\"projects\">\n      {Data.map((project) => (\n        <Project project={project} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default RecentProjects;\n\nconst Project = ({ project }) => (\n  <div>\n    <div className=\"title\">{project.title}</div>\n    <div className=\"description\">{project.desc}</div>\n  </div>\n);\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\n\nimport \"./Education.scss\";\n\nimport UWLogo from \"../../images/uw-logo.png\";\n\nconst Education = () => (\n  <div className=\"education\">\n    <SectionTitle title=\"Education\" />\n    <div className=\"schools\">\n      <Program\n        award=\"Honours Bachelor of Applied Science in Computer Engineering (with Distinction)\"\n        school=\"University of Waterloo, Class of 2018\"\n      />\n    </div>\n  </div>\n);\n\nexport default Education;\n\nconst Program = ({ award, school }) => (\n  <div className=\"program\">\n    <div className=\"award\">{award}</div>\n    <div className=\"school\">\n      <img src={UWLogo} alt=\"UW Logo\" />\n      <div class=\"school-name\">{school}</div>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport \"./Keywords.scss\";\n\nconst Keywords = () => (\n  <div className=\"keywords\">\n    <div>\n      Current interests: CSS Grid, React Hooks, Flutter, vim, zsh plugins.\n    </div>\n  </div>\n);\n\nexport default Keywords;\n","import React from \"react\";\n\nimport Name from \"./components/Name/Name\";\nimport SubInfo from \"./components/SubInfo/SubInfo\";\nimport Skills from \"./components/Skills/Skills\";\nimport ProfessionalExperience from \"./components/ProfessionalExperience/ProfessionalExperience\";\nimport EarlierExperience from \"./components/EarlierExperience/EarlierExperience\";\nimport RecentProjects from \"./components/RecentProjects/RecentProjects\";\nimport Education from \"./components/Education/Education\";\nimport Keywords from \"./components/Keywords/Keywords\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <Resume />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\nconst Resume = () => (\n  <div className=\"resume\">\n    <div className=\"structured\">\n      <Name />\n      <SubInfo />\n      <Skills />\n      <ProfessionalExperience />\n      <EarlierExperience />\n      <RecentProjects />\n      <Education />\n    </div>\n    <Keywords />\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import \"./fonts/AnonymousPro-Regular.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}