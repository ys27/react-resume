{"version":3,"sources":["images/uw-logo.png","components/Name/Name.js","components/SubInfo/SubInfo.js","components/SectionTitle/SectionTitle.js","components/Skills/Data.js","components/Skills/Skills.js","components/ProfessionalExperience/Data.js","components/ProfessionalExperience/ProfessionalExperience.js","components/EarlierExperience/Data.js","components/EarlierExperience/EarlierExperience.js","components/RecentProjects/Data.js","components/RecentProjects/RecentProjects.js","components/Education/Education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Name","className","infoDetails","icon","text","SubInfo","map","info","key","onClick","navigator","clipboard","writeText","rel","target","href","SectionTitle","title","toUpperCase","Data","Languages","DevOps","Skills","Object","entries","i","items","SkillSection","item","index","company","durations","roles","descriptions","mainLine","project","stack","subLines","ProfessionalExperience","experience","ExperienceSection","ExperienceTitle","duration","role","ExperienceDesc","desc","descIndex","Fragment","join","line","lineIndex","EarlierExperience","EarlierExperienceCard","RecentProjects","Project","Education","award","school","Program","src","UWLogo","alt","App","Resume","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85fd3d44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uw-logo.69c53a32.png\";","import React from \"react\";\n\nimport \"./Name.scss\";\n\nconst Name = () => <div className=\"name\">Andrew An</div>;\n\nexport default Name;\n","import React from \"react\";\n\nimport {\n  AiFillMail,\n  AiFillPhone,\n  AiFillGithub,\n  AiFillHome,\n} from \"react-icons/ai\";\n\nimport \"./SubInfo.scss\";\n\nconst infoDetails = [\n  {\n    icon: <AiFillMail />,\n    text: \"anandrew1995@gmail.com\",\n  },\n  {\n    icon: <AiFillPhone />,\n    text: \"647-978-3085\",\n  },\n];\n\nconst SubInfo = () => {\n  return (\n    <div className=\"subinfo\">\n      <div className=\"subinfo-text\">Full-stack Developer</div>\n      {infoDetails.map((info) => (\n        <div\n          key={info.text}\n          className=\"icon-subinfo cursor-pointer\"\n          onClick={() => {\n            navigator.clipboard.writeText(info.text);\n          }}\n        >\n          {info.icon}\n          <div className=\"subinfo-text\">{info.text}</div>\n        </div>\n      ))}\n      <a\n        className=\"icon-subinfo cursor-pointer\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://github.com/ys27\"\n      >\n        <AiFillGithub />\n        <div className=\"subinfo-text\">ys27</div>\n      </a>\n      <div className=\"icon-subinfo\">\n        <AiFillHome />\n        <div className=\"subinfo-text\">Toronto, ON</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubInfo;\n","import React from \"react\";\n\nimport \"./SectionTitle.scss\";\n\nconst SectionTitle = ({ title }) => (\n  <div className=\"section-title\">\n    <svg>\n      <rect />\n    </svg>\n    <div>{title.toUpperCase()}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","const Data = {\n  Languages: [\"C++\", \"C#\", \"Dart\", \"Java\", \"JavaScript [+TS]\", \"Python\"],\n  \"Frameworks & Libraries\": [\n    \"Couch, DB2, Mongo, Redis\",\n    \"GraphQL\",\n    \"Jest\",\n    \"Node\",\n    \"React\",\n    \"Redux, Sagas\",\n    \"Sass\",\n  ],\n  DevOps: [\"Artifactory\", \"Docker\", \"Jenkins\", \"Kubernetes\", \"Openshift\"],\n  \"Misc.\": [\n    \"Bash/Zsh Scripts\",\n    \"Chrome Extensions\",\n    \"Ethereum Blockchain\",\n    \"Flutter\",\n    \"Google Search\",\n    \"Node Packages (npm)\",\n    \"React Native\",\n    \"Unity + VR\",\n  ],\n};\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./Skills.scss\";\n\nconst Skills = () => (\n  <div className=\"skills\">\n    <SectionTitle title=\"Skills\" />\n    <div className=\"sections\">\n      {Object.entries(Data).map(([title, items], i) => (\n        <SkillSection key={i} title={title} items={items} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default Skills;\n\nconst SkillSection = ({ title, items }) => (\n  <div className=\"section\">\n    <div className=\"title\">{title}</div>\n    <ul>\n      {items.map((item, index) => (\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  </div>\n);\n","const Data = [\n  {\n    title: {\n      company: \"Fiserv\",\n      durations: [\"Jun 2021 - Present\"],\n      roles: [\"Full-stack Developer\", \"Team Lead\"],\n    },\n    descriptions: [\n      {\n        mainLine: {\n          project: \"Developer Studio\",\n          stack: [\"MERN\", \"GraphQL\", \"Sass\"],\n        },\n        subLines: [\n          \"Ownership of features and end-to-end architecture to implementation.\",\n          \"Resolved pen tests and security vulnerabilities.\",\n          \"Managed external tenants with guidance, set-up, and issues.\",\n          \"Managed internal team with sprint management.\",\n        ],\n      },\n    ],\n  },\n  {\n    title: {\n      company: \"IBM\",\n      durations: [\"Oct 2018 - Feb 2021\"],\n      roles: [\"Full-stack Developer\", \"Scrum Master\"],\n    },\n    descriptions: [\n      {\n        mainLine: {\n          project: \"Safer Payments\",\n          stack: [\"React/Redux/Sagas\", \"TS\", \"Sass\", \"C++\", \"Python\"],\n        },\n        subLines: [\"Prod level full-stack feature development/maintenance.\"],\n      },\n      {\n        mainLine: {\n          project: \"Entity Enrichment\",\n          stack: [\"MERN/Redux\", \"Custom Packages\"],\n        },\n        subLines: [\n          \"Designed and built various entity enrichment methods for prod level APIs & demo UI.\",\n          \"Owned and managed a stand-alone entity enrichment micro-service.\",\n          \"Wrote a published paper for novel entity enrichment ideas.\",\n        ],\n      },\n      {\n        mainLine: {\n          project: \"Transaction List Screening\",\n          stack: [\"React/Redux/Sagas\", \"Mongo\", \"Flask\"],\n        },\n        subLines: [\"Prod level full-stack feature development/maintenance.\"],\n      },\n      {\n        mainLine: {\n          project: \"Open Banking\",\n          stack: [\"React/Redux\", \"Java\", \"CouchDB\"],\n        },\n        subLines: [\n          \"Designed and built micro-services with authenticated APIs + UI to visualize concepts.\",\n        ],\n      },\n    ],\n  },\n  // {\n  //   title: {\n  //     company: \"D2L\",\n  //     durations: [\"Sept 2017 - Dec 2017\"],\n  //     role: \"Software Developer Co-op\",\n  //   },\n  //   descriptions: [\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Vue, Node, Mongo, Solidity]\",\n  //           \"Smart contracts deployed to Ethereum, with UI\",\n  //         ],\n  //       ],\n  //     },\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Unity 3D, C#]\",\n  //           \"VR Application to view Brightspace content, with OAuth 2.0\",\n  //         ],\n  //       ],\n  //     },\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Chromium Extension]\",\n  //           \"Brightspace Extension, to ease user access to recent and relevant links\",\n  //         ],\n  //       ],\n  //     },\n  //   ],\n  // },\n  // {\n  //   title: {\n  //     company: \"IFDS\",\n  //     durations: [\"Sept 2016 - Dec 2016\", \"Jan 2016 - Apr 2016\"],\n  //     role: \"R&D Developer Co-op\",\n  //   },\n  //   descriptions: [\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Python, Solidity, Node/Express]\",\n  //           \"Transactions simulator conn. to Ethereum blockchain & UI\",\n  //         ],\n  //       ],\n  //     },\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Ruby on Rails]\",\n  //           \"Security Week Games Web App with levels, users, and score management\",\n  //         ],\n  //       ],\n  //     },\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Meteor, React, Mongo]\",\n  //           \"Full-stack app from scratch: Dynamic CMS and authentication\",\n  //         ],\n  //       ],\n  //     },\n  //     {\n  //       subLines: [\n  //         [\n  //           \"[Solidity, Node/Express, JS]\",\n  //           \"Ethereum Smart contracts: Real-time info between contracts & UI\",\n  //         ],\n  //       ],\n  //     },\n  //   ],\n  // },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./ProfessionalExperience.scss\";\n\nconst ProfessionalExperience = () => (\n  <div className=\"professional-experiences\">\n    <SectionTitle title=\"Professional Experience\" />\n    <div className=\"experiences\">\n      {Data.map((experience, index) => (\n        <ExperienceSection key={index} experience={experience} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default ProfessionalExperience;\n\nconst ExperienceSection = ({ experience }) => (\n  <div className=\"experience-section\">\n    <ExperienceTitle title={experience.title} />\n    <ExperienceDesc descriptions={experience.descriptions} />\n  </div>\n);\n\nconst ExperienceTitle = ({ title }) => {\n  const { company, durations, roles } = title;\n  return (\n    <div className=\"experience-title\">\n      <div className=\"company\">{company}</div>\n      <div className=\"durations\">\n        {durations.map((duration, index) => (\n          <div key={index} className=\"duration\">\n            {duration}\n          </div>\n        ))}\n      </div>\n      <div className=\"roles\">\n        {roles.map((role, index) => (\n          <div key={index} className=\"role\">\n            {role}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExperienceDesc = ({ descriptions }) => (\n  <ul className=\"experience-desc\">\n    {descriptions.map((desc, descIndex) => (\n      <React.Fragment key={descIndex}>\n        <li className=\"row\">\n          <div className=\"main-line-project\">{`${desc?.mainLine?.project}`}</div>\n          <div className=\"main-line-stack\">{`[${desc?.mainLine?.stack?.join(\n            \", \"\n          )}]`}</div>\n        </li>\n        <ul>\n          {desc.subLines?.map((line, lineIndex) => (\n            <div key={lineIndex} className=\"row subline\">\n              <li>{line}</li>\n            </div>\n          ))}\n        </ul>\n      </React.Fragment>\n    ))}\n  </ul>\n);\n","const Data = [\n  {\n    title: {\n      company: \"D2L\",\n      durations: [\"Sept 2017 - Dec 2017\"],\n      role: \"Software Developer Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"IFDS\",\n      durations: [\"Jan 2016 - Dec 2016\"],\n      role: \"R&D Developer Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"Gov't of Ontario\",\n      durations: [\"May 2015 - Aug 2015\"],\n      role: \"Web Developer Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"Manulife Financial\",\n      durations: [\"Sept 2014 - Dec 2014\"],\n      role: \".NET Dev / DB Admin Co-op\",\n    },\n  },\n  {\n    title: {\n      company: \"IBM\",\n      durations: [\"Jan 2014 - Apr 2014\"],\n      role: \"QA Developer Co-op\",\n    },\n  },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./EarlierExperience.scss\";\nimport \"../ProfessionalExperience/ProfessionalExperience.scss\";\n\nconst EarlierExperience = () => (\n  <div className=\"earlier-experience\">\n    <SectionTitle title=\"Earlier Experience\" />\n    <div className=\"experiences\">\n      {Data.map((experience, index) => (\n        <EarlierExperienceCard key={index} title={experience.title} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default EarlierExperience;\n\nconst EarlierExperienceCard = ({ title }) => {\n  const { company, durations, role } = title;\n  return (\n    <div className=\"earlier-experience-card\">\n      <div className=\"company\">{company}</div>\n      <div className=\"durations\">\n        {durations.map((duration, index) => (\n          <div key={index} className=\"duration\">\n            {duration}\n          </div>\n        ))}\n      </div>\n      <div className=\"role\">{role}</div>\n    </div>\n  );\n};\n","const Data = [\n  {\n    title: \"Fund Tracker\",\n    desc: [\n      \"[Flutter, Dart]\",\n      \"Keep track of transactions. Statistics, recurring transactions, cloud sync, etc.;\",\n    ],\n  },\n  {\n    title: \"MelonList\",\n    desc: [\n      \"[MERN]\",\n      \"View various music board charts with YouTube links and export to playlist;\",\n    ],\n  },\n  {\n    title: \"RedditUserTransfer\",\n    desc: [\n      \"[MERN]\",\n      \"Transfer saved posts & comments, subscriptions, and preferences to other accounts;\",\n    ],\n  },\n];\n\nexport default Data;\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport Data from \"./Data\";\n\nimport \"./RecentProjects.scss\";\n\nconst RecentProjects = () => (\n  <div className=\"recent-projects\">\n    <SectionTitle title=\"Recent Projects\" />\n    <div className=\"projects\">\n      {Data.map((project, index) => (\n        <Project key={index} project={project} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default RecentProjects;\n\nconst Project = ({ project }) => (\n  <div className=\"project\">\n    <div className=\"title\">{project.title}</div>\n    <div className=\"row description\">\n      <div className=\"desc-skills\">{project.desc[0]}</div>\n      {project.desc[1]}\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\n\nimport \"./Education.scss\";\n\nimport UWLogo from \"../../images/uw-logo.png\";\n\nconst Education = () => (\n  <div className=\"education\">\n    <SectionTitle title=\"Education\" />\n    <div className=\"schools\">\n      <Program\n        award=\"Honours Bachelor of Applied Science in Computer Engineering (with Distinction)\"\n        school=\"University of Waterloo, Class of 2018\"\n      />\n    </div>\n  </div>\n);\n\nexport default Education;\n\nconst Program = ({ award, school }) => (\n  <div className=\"program\">\n    <div className=\"award\">{award}</div>\n    <div className=\"school\">\n      <img src={UWLogo} alt=\"UW Logo\" />\n      <div className=\"school-name\">{school}</div>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport Name from \"./components/Name/Name\";\nimport SubInfo from \"./components/SubInfo/SubInfo\";\nimport Skills from \"./components/Skills/Skills\";\nimport ProfessionalExperience from \"./components/ProfessionalExperience/ProfessionalExperience\";\nimport EarlierExperience from \"./components/EarlierExperience/EarlierExperience\";\nimport RecentProjects from \"./components/RecentProjects/RecentProjects\";\nimport Education from \"./components/Education/Education\";\n// import Keywords from \"./components/Keywords/Keywords\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"App\">\n        <Resume />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\nconst Resume = () => (\n  <div className=\"resume\">\n    <div className=\"structured\">\n      <Name />\n      <SubInfo />\n      <Skills />\n      <ProfessionalExperience />\n      <EarlierExperience />\n      <RecentProjects />\n      <Education />\n    </div>\n    {/* <Keywords /> */}\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import \"./fonts/AnonymousPro-Regular.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}